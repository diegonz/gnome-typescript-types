declare const GLib: any;
declare const Gio: any;
declare const GObject: any;
declare const Shell: any;
declare const St: any;
declare const Signals: any;
declare const ExtensionDownloader: any;
declare const ExtensionUtils: any;
declare const FileUtils: any;
declare const Main: any;
declare const MessageTray: any;
declare const ExtensionState: any;
declare const ExtensionType: any;
declare const ENABLED_EXTENSIONS_KEY: "enabled-extensions";
declare const DISABLED_EXTENSIONS_KEY: "disabled-extensions";
declare const DISABLE_USER_EXTENSIONS_KEY: "disable-user-extensions";
declare const EXTENSION_DISABLE_VERSION_CHECK_KEY: "disable-extension-version-validation";
declare const UPDATE_CHECK_TIMEOUT: number;
declare var ExtensionManager: {
    new (): {
        _initialized: boolean;
        _updateNotified: boolean;
        _extensions: Map<any, any>;
        _unloadedExtensions: Map<any, any>;
        _enabledExtensions: any[];
        _extensionOrder: any[];
        _checkVersion: boolean;
        init(): void;
        readonly updatesSupported: boolean;
        lookup(uuid: any): any;
        getUuids(): any[];
        _extensionSupportsSessionMode(uuid: any): boolean;
        _callExtensionDisable(uuid: any): void;
        _callExtensionEnable(uuid: any): void;
        enableExtension(uuid: any): boolean;
        disableExtension(uuid: any): boolean;
        openExtensionPrefs(uuid: any, parentWindow: any, options: any): boolean;
        notifyExtensionUpdate(uuid: any): void;
        logExtensionError(uuid: any, error: any): void;
        createExtensionObject(uuid: any, dir: any, type: any): {
            metadata: any;
            uuid: any;
            type: any;
            dir: any;
            path: any;
            error: string;
            hasPrefs: any;
            hasUpdate: boolean;
            canChange: boolean;
            sessionModes: any;
        };
        _canLoad(extension: any): boolean;
        loadExtension(extension: any): void;
        unloadExtension(extension: any): boolean;
        reloadExtension(oldExtension: any): void;
        _callExtensionInit(uuid: any): boolean;
        _getModeExtensions(): any;
        _updateCanChange(extension: any): void;
        _getEnabledExtensions(): any;
        _onUserExtensionsEnabledChanged(): void;
        _onEnabledExtensionsChanged(): void;
        _onSettingsWritableChanged(): void;
        _onVersionValidationChanged(): void;
        _installExtensionUpdates(): void;
        _loadExtensions(): void;
        _enableAllExtensions(): void;
        _disableAllExtensions(): void;
        _sessionUpdated(): void;
    };
};
declare const ExtensionUpdateSource: any;
//# sourceMappingURL=extensionSystem.d.ts.map