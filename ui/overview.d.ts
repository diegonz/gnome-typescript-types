declare const Clutter: any;
declare const Gio: any;
declare const GLib: any;
declare const GObject: any;
declare const Meta: any;
declare const Shell: any;
declare const St: any;
declare const Signals: any;
declare var ANIMATION_TIME: number;
declare const DND: any;
declare const LayoutManager: any;
declare const Main: any;
declare const MessageTray: any;
declare const OverviewControls: any;
declare const Params: any;
declare const SwipeTracker: any;
declare const WindowManager: any;
declare const WorkspaceThumbnail: any;
declare var DND_WINDOW_SWITCH_TIMEOUT: number;
declare var OVERVIEW_ACTIVATION_TIMEOUT: number;
declare var ShellInfo: {
    new (): {
        _source: any;
        setMessage(text: any, options: any): void;
    };
};
declare var OverviewActor: any;
declare var Overview: {
    new (): {
        _initCalled: boolean;
        _visible: boolean;
        readonly dash: any;
        readonly dashIconSize: any;
        readonly animationInProgress: boolean;
        readonly visible: boolean;
        readonly visibleTarget: boolean;
        readonly closing: boolean;
        _createOverview(): void;
        _activationTime: number;
        _shown: boolean;
        _modal: boolean;
        _animationInProgress: boolean;
        _visibleTarget: boolean;
        _coverPane: any;
        _dragMonitor: {
            dragMotion: any;
        };
        _windowSwitchTimeoutId: any;
        _windowSwitchTimestamp: any;
        _lastActiveWorkspaceIndex: any;
        _lastHoveredWindow: any;
        _sessionUpdated(): void;
        isDummy: boolean;
        init(): void;
        _overview: any;
        _shellInfo: {
            _source: any;
            setMessage(text: any, options: any): void;
        };
        _swipeTracker: any;
        setMessage(text: any, options: any): void;
        _onDragBegin(): void;
        _inXdndDrag: boolean;
        _onDragEnd(): void;
        _resetWindowSwitchTimeout(): void;
        _onDragMotion(dragEvent: any): any;
        _onScrollEvent(actor: any, event: any): any;
        _relayout(): void;
        _onRestacked(): void;
        _gestureBegin(tracker: any): void;
        _gestureUpdate(tracker: any, progress: any): void;
        _gestureEnd(tracker: any, duration: any, endProgress: any): void;
        beginItemDrag(source: any): void;
        _inItemDrag: boolean;
        cancelledItemDrag(source: any): void;
        endItemDrag(source: any): void;
        beginWindowDrag(window: any): void;
        _inWindowDrag: boolean;
        cancelledWindowDrag(window: any): void;
        endWindowDrag(window: any): void;
        focusSearch(): void;
        shouldToggleByCornerOrButton(): boolean;
        _syncGrab(): boolean;
        _grab: any;
        show(state?: any): void;
        _animateVisible(state: any): void;
        _showDone(): void;
        hide(): void;
        _animateNotVisible(): void;
        _hideDone(): void;
        toggle(): void;
        showApps(): void;
        selectApp(id: any): void;
        runStartupAnimation(callback: any): void;
        getShowAppsButton(): any;
        readonly searchEntry: any;
    };
};
//# sourceMappingURL=overview.d.ts.map